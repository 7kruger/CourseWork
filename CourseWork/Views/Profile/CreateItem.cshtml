@using CourseWork.Models.Entities
@{
	ViewData["Title"] = "CreateItem";
}
@model CourseWork.Models.ViewModels.CreateItemViewModel

<h1 class="text-center">Создать айтем</h1>

<div class="container text-center">
	@*<form asp-action="CreateItem" asp-controller="Profile" method="post">*@

		<div class="container text-center custom-group-form">
			<div class="form-group">
				@*<label asp-for="Name">Название айтема</label><br />*@
				<input class="form-control" type="text" id="name" placeholder="Название айтема" />
				<span asp-validation-for="Name" />
			</div>

			<div class="form-group">
				@*<label asp-for="Content">Содержание айтема</label><br />*@
				<textarea class="form-control" id="content" placeholder="Содержимое"></textarea>
				<span asp-validation-for="Content" />
			</div>
		</div>

		<div class="container text-center">
			<h3>Добавить в коллекцию</h3>
			@if ((int)ViewData["Count"] != 0)
			{
				<div style="overflow: auto;">
					<table class="table table-sm">
						<thead>
							<tr>
								<th scope="col">Выбрать</th>
								<th scope="col">Название коллекции</th>
								<th scope="col">Описание</th>
								<th scope="col">Тема</th>
								<th scope="col">Дата создания</th>
							</tr>
						</thead>
						<tbody>
							@foreach (var collection in ViewData["Collections"] as List<Collection>)
							{
								<tr>
									<td><input type="radio" name="collectionId" value="@collection.Id" /></td>
									<td><p>@collection.Name</p></td>
									<td><p>@collection.Description.Substring(0, Math.Min(collection.Description.Length, 50))</p></td>
									<td><p>@collection.Theme</p></td>
									<td><p>@collection.Date</p></td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			}
			else
			{
				<p>Нет доступных коллекций</p>
			}
		</div>

		<div class="form-group">
			<button class="btn btn-outline-primary" id="createBtn">Добавить</button>
		</div>
	@*</form>*@
</div>

@section Scripts {
<script src="~/js/createItem.js"></script>
}

